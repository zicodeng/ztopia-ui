(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{"./src/docs/development.mdx":function(e,n,a){"use strict";a.r(n);var t=a("./node_modules/react/index.js"),o=a.n(t),r=a("./node_modules/@mdx-js/tag/dist/index.js");function m(e,n){if(null==e)return{};var a,t,o=function(e,n){if(null==e)return{};var a,t,o={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}n.default=function(e){var n=e.components;m(e,["components"]);return o.a.createElement(r.MDXTag,{name:"wrapper",components:n},o.a.createElement(r.MDXTag,{name:"h1",components:n,props:{id:"development"}},o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"h1",props:{"aria-hidden":!0,href:"#development"}},o.a.createElement(r.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Development"),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"collaboration"}},o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"h2",props:{"aria-hidden":!0,href:"#collaboration"}},o.a.createElement(r.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Collaboration"),o.a.createElement(r.MDXTag,{name:"ul",components:n},o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},"Always create a new work branch for different features or tasks.\nName your work branch as your name + feature you are implementing. e.g. ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"zico-add-starter-code"),"."),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},"Before you create a new work branch, always make sure to pull the latest code and rebase against ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"origin/master"),"."),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},"Never push your code to master branch directly."),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},"Each commit should only concern its own primary task. For example, if you encounter a bug and know a quick fix for it, do not fix it in your current commit. Create a new commit for fixing this bug instead."),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},"Always ",o.a.createElement(r.MDXTag,{name:"strong",components:n,parentName:"li"},"capitalize")," the first letter in your commit message."),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},"Use ",o.a.createElement(r.MDXTag,{name:"strong",components:n,parentName:"li"},"JSDoc")," for module and function comments.")),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"contributing"}},o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"h2",props:{"aria-hidden":!0,href:"#contributing"}},o.a.createElement(r.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Contributing"),o.a.createElement(r.MDXTag,{name:"p",components:n},"Install dependencies."),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre"},"yarn install\n")),o.a.createElement(r.MDXTag,{name:"p",components:n},"Start Docz development server."),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre"},"yarn start\n")),o.a.createElement(r.MDXTag,{name:"p",components:n},"Open your browser and navigate to the URL prompted in the terminal."))}}}]);